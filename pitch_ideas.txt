Pitch Ideas

https://github.com/bizzlebin/team/pitch_ideas.txt

***

By Jeremiah Thomas, et al

***

Created on 2020-05-24

Updated on 2020-06-07

+++
Description

We need to make a project pitch very soon. We've already settled on a tentative plan and I think it meets the requirements. But we're TEAM Exists As Metonym! And that means going far beyond.

So in addition to our general idea, we need to bulk up our pitch. That means we need to study the project overview (csc154_project_overview.pdf in Blackboard) and other docs and articulate how our project meets some of the key goals for this activity: how does it address a business need? How does it incorporate a database? How will it require a team? Think about what you learned in CTS 115, if you've taken it. This pitch needs to be not only clear and thorough, but absolutely shame the pitches of the other competing teams. If someone wants to take it upon themselves to round up some graphics, that would be even better!

+++
General Project Idea

From the forum, here is our current "pitch":

"
One of the largest limitations of standard filesystems is that they're 1-dimensional. This limits the ways in which files can be sorted, searched, and accessed. Databases are inherently n-dimensional (well, technically, they're infinitely joinable 2-dimensional tables in an RDBMS, but close enough!). Though some tagging file managers exist, most mangle the filename or use other weird tricks that compromise a file's integrity to store tags. I want to create a file manager that uses a DB separate from the files which can store and manage this tag information. UI will be a bigger component of this project than the others.
"

+++
More Ideas

As per the weekly schedule, everyone needs to add a minimum of *2* ideas below. Please create a [UEWSG] section titled with your name and then follow it with your ideas in a bulleted list. Remember to modify the file metadata, at top, if you edit this on a day after it was created!

===
Jeremiah Thomas

• Database integrity checks and ACID will ensure clean tag assignment
• Different departments within a businesses need the ability to sort complex documents in different ways
• A graphic of Windows Explorer with a big red X? What would be the counterpoint?

===
Stavros Bannoura

• Algorithm should possibly include a linked list to keep track of the stored file blocks for the file system (if possible).
• The UI should include a design that has the ability to show the organized interfaces for each department so that the user can know which document he needs to sort or organize.
• I know there are some issues with limiting the amount of data sharing, since data is scattered in various places which cause files to have different formats and be stored in different folders or in different departments it is best if we make the file system less difficult to share data among different applications (if possible).

===
Anna Malmberg

• Who will be our target client for this project? While databases and file structures work similarly in most environments, I think it's important that we get a general idea of who the client will be. Are we creating this for a business (in which case let's pick a general category such as government, research, banking, medical... etc), or are we creating this for home users? This will effect many levels of the project from security to layout and functionality. A business would likely have the IT department set up the tags, which means control can be more granular versus the home user who would prefer it being straight forward and easy to use.

• Continuing on Stavros's idea regarding the UI. I just started using Trello with a "kanban board" to organize myself at work, I think a similar approach could work here for the user side of the UI. One board per department that the user has access to, with different folders for groups. E.g. a chemistry laboratory could be broken down per instrumentation, a stock brokerage firm could be organized per broker, or for a home user you could have things like work-related, pets, car.

• On the database side of it, from Jeremiah's idea I think what he's going for is that the tags are stored in the database and when the user selects/searches for a tag it will generate a list of documents that match where the user can then select the file or folder that the want to use, is that correct? It might be useful to have an option here for a brief description note saved in our database that describes what each tag is to be used for to ensure that the tags are used consistently. Client should have the option of creating new tags as needed, like project names or the name of a team lead, however the system will get cluttered quickly if general tags are not re-used.

Documentation ideas:
• I'll take minutes at our meeting this week and lay out a draft plan that can serve as a backbone for our official pitch and SRS

===
Sandhya Joshi

There are some great points from Anna, Stavros. I would like to expand upon that that thoughts.
• Are we creating a our own database and using file tag manager?
• What is the final objective of the project? Tag based file manager means, it deals with files and data. We can keep it simple for real life application.

Examples:
• You can extract the movies based on these tags, like an online Video rental store, which tags the movie based on genre like mystery, romance, sci-fi, drama, adventure so on.
• Extracting a picture from the picture folder that is tagged by a label with name and date, like vacation-2000, graduation-2012 birthday-2020.
• I really liked the Anna’s idea about finding the recipe with the ingredients. We can create a database of food and tag it with ingredients and based on the ingredients, you pull the recipe. For example, you have eggplant, zucchini, tomato or bell pepper. It can pull multiple recipe with these ingredients.

===
Zachary Wawrzaszek

I'm hoping to clear up some of my confusion during our meeting tomorrow which will help me think of some better ideas and improve my current ones, I am possibly focusing to much on specifics at this point.
• I believe Jeremiah wants to use a database to store tags that a user would create in the GUI, then the database manages the link between the file that was tagged and the content of the tag itself.
• I am not sure how we want to handle tag creation. An idea that comes to mind is being able to select the file and having a textarea for the user to input their tag and then a button to transfer the tag and filename seperatley to the database.
• Again I am not sure how exactly we want to accomplish the transfer of data (between front and back ends) whether we want to use a button that sends the user's tag search request (from a textarea), have the database query for the intended results, and simply return the results from the database and then format them for the GUI.
• There might be a way to make the search more dynamic like in the base windows 10 file manager how possible results automatically appear as soon as you start to type what you are searching for.
• We possibly need to take into account the users ability to edit both filenames and their tags as this could make the database managment a little more tricky.